[project]
name = "ds5612-pa1"
version = "0.1.0"
description = "Add your description here"
authors = [
    { name = "saravanan-thirumuruganathan", email = "saravanan.thirumuruganathan@gmail.com" }
]
dependencies = [
    "rich~=13.7.1",
    "jupyterlab~=4.2.4",
    "ipywidgets~=8.1.3",
    "pyyaml~=6.0.2",
    "pandas~=2.2.2",
    "matplotlib~=3.9.2",
    "seaborn~=0.13.2",
    "duckdb~=1.0.0",
    "altair~=5.4.0",
    "vegafusion[embed]>=1.5.0",
    "anywidget~=0.9.13",
]
readme = "README.md"
requires-python = "~= 3.12"

[build-system]
requires = ["pdm-backend"]
build-backend = "pdm.backend"

[tool.rye]
managed = true
dev-dependencies = [
    "pytest~=8.3.2",
    "pylint~=3.2.6",
]

[tool.rye.scripts]
fmt = "rye fmt"
lint = "rye lint"
check = "rye run pylint src"
test = "rye test"
all = { chain = ["fmt", "lint", "check", "test"] }


[tool.ruff]
line-length = 100


[tool.ruff.lint]
select = ["ALL"]
ignore = ["C901", "D100", "D103", "D104", "D203", "D213", 
            "COM812", 
            "ERA001", 
            "EM101", #Exception must not use a string literal, assign to variable first
            "EM102", #Exception must not use an f-string literal, assign to variable first
            "ISC001", 
            "PD010", #`.pivot_table` is preferred to `.pivot` or `.unstack`; provides same functionality
            "PLR2004", #Magic value used in comparison, consider replacing  with a constant variable
            "PT023", # Use `@pytest.mark.blah()` over `@pytest.mark.blah`
            "S101", #Use of `assert` detected
            "S311",
            "S608", #Possible SQL injection vector through string-based query construction
            "TRY003", #Avoid specifying long messages outside the exception class
            "T201"]

[tool.ruff.lint.isort]
lines-after-imports = 2

[tool.pylint.messages_control]
disable = '''missing-module-docstring,
    missing-class-docstring,
    missing-function-docstring,
'''

# We are registering custom markers so that pytest does not complain
[tool.pytest.ini_options]
markers = [
    "t2c", "t2d",
    "t31a", "t31b", "t31c",
    "t32a", "t32b", "t32c"
]
